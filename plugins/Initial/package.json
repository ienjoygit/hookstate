{
    "name": "@hookstate/initial",
    "version": "3.0.0",
    "description": "Plugin for @hookstate/core to enable access to initial state value and to modified status.",
    "license": "MIT",
    "author": {
        "name": "Andrey Konstantinov"
    },
    "repository": {
        "url": "https://github.com/avkonst/hookstate"
    },
    "bugs": {
        "url": "https://github.com/avkonst/hookstate/issues"
    },
    "homepage": "https://github.com/avkonst/hookstate",
    "main": "dist/index.js",
    "module": "dist/index.es.js",
    "jsnext:main": "dist/index.es.js",
    "types": "dist/index.d.ts",
    "scripts": {
        "build": "rollup -c",
        "build:w": "rollup -c -w",
        "build:docs": "typedoc --plugin typedoc-plugin-markdown --hideBreadcrumbs --tsconfig ./tsconfig.typedoc.json --exclude \"dist/**.js\" --gitRevision master --includeDeclarations --excludeExternals --excludeNotExported --categorizeByGroup false --readme none --hideGenerator --mode file --out dist/docs && concat-md --decrease-title-levels --dir-name-as-title dist/docs > dist/typedoc.md && rimraf dist/docs && replace '></a>' '/>' dist/typedoc.md && replace '頭 [*][*]([A-Za-z0-9]+)[*][*]: [*](.*)[*]' '頭 **$1**: *`$2`*' dist/typedoc.md && replace '頭 [*][*]State[*][*]: [*](.*)[*]' '頭 **State**: *[StateMixin](#interfacesstatemixinmd) & `S extends object` ? `{ readonly [K in keyof Required<S>]: State<S[K]> }` : [StateMethods](#interfacesstatemethodsmd)*' dist/typedoc.md && replace '[(]statemethods.md#\\[self\\][)]' '(#self)' dist/typedoc.md && replace '[(]statemixin.md#\\[self\\][)]' '(#self-1)' dist/typedoc.md && replace '[(]statemixindestroy.md#\\[self\\][)]' '(#self-2)' dist/typedoc.md && replace '# @hookstate/core' '' dist/typedoc.md && replace '<a name=\"readmemd\"/>' '\n---\nid: typedoc-hookstate-core\ntitle: API @hookstate/core\n---' dist/typedoc.md && replace '\n\n(---)' '$1' dist/typedoc.md && mv dist/typedoc.md ../docs/index/docs/typedoc-hookstate-core.md",
        "clean": "rimraf dist",
        "test": "cross-env CI=1 jest --env=jsdom",
        "test:w": "jest --env=jsdom --watch",
        "update": "ncu -u",
        "prepare": "pnpm build"
    },
    "peerDependencies": {
        "@hookstate/core": "^3.0.0 || ^4.0.0",
        "lodash.clonedeep": "^4.5.0",
        "lodash.isequal": "^4.5.0"
    },
    "devDependencies": {
        "@babel/core": "7.17.5",
        "@babel/runtime": "7.17.2",
        "@hookstate/core": "file:../../core",
        "@rollup/plugin-babel": "5.3.1",
        "@rollup/plugin-commonjs": "21.0.2",
        "@rollup/plugin-node-resolve": "13.1.3",
        "@rollup/plugin-url": "6.1.0",
        "@testing-library/react": "12.1.3",
        "@testing-library/react-hooks": "7.0.2",
        "@types/jest": "27.4.1",
        "@types/lodash.clonedeep": "4.5.6",
        "@types/lodash.isequal": "4.5.5",
        "@types/node": "^17.0.21",
        "@types/react": "17.0.39",
        "@types/react-dom": "17.0.12",
        "cross-env": "7.0.3",
        "jest": "^27.5.1",
        "npm-check-updates": "12.5.0",
        "react": "17.0.2",
        "react-dom": "17.0.2",
        "react-test-renderer": "17.0.2",
        "rimraf": "3.0.2",
        "rollup": "2.68.0",
        "rollup-plugin-peer-deps-external": "2.2.4",
        "rollup-plugin-typescript2": "0.31.2",
        "ts-jest": "27.1.3",
        "tslib": "^2.3.1",
        "typescript": "4.6.2"
    },
    "files": [
        "dist"
    ]
}
