{"version":3,"file":"index.es.js","sources":["../src/Initial.ts"],"sourcesContent":["\nimport {\n    Path,\n    Downgraded,\n    Plugin,\n    StateLink,\n    StateValueAtPath,\n    StateValueAtRoot,\n    State,\n    self,\n    StateMarkerID,\n    StateMethods\n} from '@hookstate/core';\n\nimport isEqual from 'lodash.isequal';\nimport cloneDeep from 'lodash.clonedeep';\n\nexport interface InitialExtensions<S> {\n    get(): S | undefined;\n    modified(): boolean;\n    unmodified(): boolean;\n}\n\nclass InitialPluginInstance {\n    private initialState: StateValueAtRoot;\n    constructor(initialValue: StateValueAtRoot) {\n        this.initialState = cloneDeep(initialValue);\n    }\n    getInitial = (path: Path) => {\n        let result = this.initialState;\n        path.forEach(p => {\n            result = result && result[p];\n        });\n        return result;\n    }\n    getModified = (l: StateMethods<StateValueAtPath>): boolean => {\n        l.attach(Downgraded)\n        return !isEqual(l.value, this.getInitial(l.path))\n    }\n}\n\nconst PluginID = Symbol('Initial');\n\n// tslint:disable-next-line: function-name\nexport function Initial(): Plugin;\nexport function Initial<S>($this: StateLink<S>): InitialExtensions<S>;\nexport function Initial<S>($this: State<S>): InitialExtensions<S>;\nexport function Initial<S>($this?: StateLink<S> | State<S>): Plugin | InitialExtensions<S> {\n    if ($this) {\n        if ($this[StateMarkerID]) {\n            const $th = $this as State<S>\n            const [instance, link] = $th[self].attach(PluginID);\n            if (instance instanceof Error) {\n                throw instance;\n            }\n            const inst = instance as InitialPluginInstance;\n            return {\n                get: () => inst.getInitial($th[self].path),\n                modified: () => inst.getModified($th[self]),\n                unmodified: () => !inst.getModified($th[self])\n            }\n        } else {\n            const [link, instance] = ($this as StateLink<S>).with(PluginID);\n            const inst = instance as InitialPluginInstance;\n            return {\n                get: () => inst.getInitial(link.path),\n                modified: () => inst.getModified(link),\n                unmodified: () => !inst.getModified(link)\n            }\n        }\n    }\n    return {\n        id: PluginID,\n        create: (state: StateLink<StateValueAtRoot>) => {\n            return new InitialPluginInstance(state.value) as {}\n        }\n    }\n}\n"],"names":[],"mappings":";;;;AAuBA;IAEI,+BAAY,YAA8B;QAA1C,iBAEC;QACD,eAAU,GAAG,UAAC,IAAU;YACpB,IAAI,MAAM,GAAG,KAAI,CAAC,YAAY,CAAC;YAC/B,IAAI,CAAC,OAAO,CAAC,UAAA,CAAC;gBACV,MAAM,GAAG,MAAM,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;aAChC,CAAC,CAAC;YACH,OAAO,MAAM,CAAC;SACjB,CAAA;QACD,gBAAW,GAAG,UAAC,CAAiC;YAC5C,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,CAAA;YACpB,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,EAAE,KAAI,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAA;SACpD,CAAA;QAZG,IAAI,CAAC,YAAY,GAAG,SAAS,CAAC,YAAY,CAAC,CAAC;KAC/C;IAYL,4BAAC;AAAD,CAAC,IAAA;AAED,IAAM,QAAQ,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC;SAMnB,OAAO,CAAI,KAA+B;IACtD,IAAI,KAAK,EAAE;QACP,IAAI,KAAK,CAAC,aAAa,CAAC,EAAE;YACtB,IAAM,KAAG,GAAG,KAAiB,CAAA;YACvB,IAAA,KAAmB,KAAG,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,EAA5C,QAAQ,QAAA,EAAE,IAAI,QAA8B,CAAC;YACpD,IAAI,QAAQ,YAAY,KAAK,EAAE;gBAC3B,MAAM,QAAQ,CAAC;aAClB;YACD,IAAM,MAAI,GAAG,QAAiC,CAAC;YAC/C,OAAO;gBACH,GAAG,EAAE,cAAM,OAAA,MAAI,CAAC,UAAU,CAAC,KAAG,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,GAAA;gBAC1C,QAAQ,EAAE,cAAM,OAAA,MAAI,CAAC,WAAW,CAAC,KAAG,CAAC,IAAI,CAAC,CAAC,GAAA;gBAC3C,UAAU,EAAE,cAAM,OAAA,CAAC,MAAI,CAAC,WAAW,CAAC,KAAG,CAAC,IAAI,CAAC,CAAC,GAAA;aACjD,CAAA;SACJ;aAAM;YACG,IAAA,KAAoB,KAAsB,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAxD,MAAI,QAAA,EAAE,QAAQ,QAA0C,CAAC;YAChE,IAAM,MAAI,GAAG,QAAiC,CAAC;YAC/C,OAAO;gBACH,GAAG,EAAE,cAAM,OAAA,MAAI,CAAC,UAAU,CAAC,MAAI,CAAC,IAAI,CAAC,GAAA;gBACrC,QAAQ,EAAE,cAAM,OAAA,MAAI,CAAC,WAAW,CAAC,MAAI,CAAC,GAAA;gBACtC,UAAU,EAAE,cAAM,OAAA,CAAC,MAAI,CAAC,WAAW,CAAC,MAAI,CAAC,GAAA;aAC5C,CAAA;SACJ;KACJ;IACD,OAAO;QACH,EAAE,EAAE,QAAQ;QACZ,MAAM,EAAE,UAAC,KAAkC;YACvC,OAAO,IAAI,qBAAqB,CAAC,KAAK,CAAC,KAAK,CAAO,CAAA;SACtD;KACJ,CAAA;AACL;;;;"}