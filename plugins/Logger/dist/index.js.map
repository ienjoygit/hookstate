{"version":3,"file":"index.js","sources":["../src/Logger.ts"],"sourcesContent":["\r\nimport {\r\n    Plugin,\r\n    Path,\r\n    StateValueAtPath,\r\n    PluginCallbacks,\r\n    PluginCallbacksOnSetArgument,\r\n    State,\r\n    PluginStateControl\r\n} from '@hookstate/core';\r\n\r\nexport interface LoggerExtensions {\r\n    log(): void;\r\n}\r\n\r\nclass LoggerPluginInstance implements PluginCallbacks {\r\n    toJsonTrimmed(s: StateValueAtPath) {\r\n        const limit = 100;\r\n        const r = JSON.stringify(s);\r\n        if (r && r.length > 100) {\r\n            return `${r.slice(0, limit)}... (${r.length - limit} characters trunkated)`\r\n        }\r\n        return r;\r\n    }\r\n\r\n    onSet(p: PluginCallbacksOnSetArgument) {\r\n        // tslint:disable-next-line: no-console\r\n        console.log(\r\n            `[hookstate]: new value set at path '/${p.path.join('/')}': ` +\r\n            `${this.toJsonTrimmed(p.value)}`,\r\n            p);\r\n    }\r\n\r\n    log(path: Path, l: Pick<PluginStateControl<StateValueAtPath>, 'getUntracked'>) {\r\n        // tslint:disable-next-line: no-console\r\n        return console.log(\r\n            `[hookstate]: current value at path '/${path.join('/')}: ` +\r\n            `${this.toJsonTrimmed(l.getUntracked())}'`,\r\n            {\r\n                path: path,\r\n                value: l.getUntracked()\r\n            });\r\n    }\r\n}\r\n\r\nconst PluginID = Symbol('Logger');\r\n\r\n// tslint:disable-next-line: function-name\r\nexport function Logger(): Plugin;\r\nexport function Logger<S>($this: State<S>): LoggerExtensions;\r\nexport function Logger<S>($this?: State<S>): Plugin | LoggerExtensions {\r\n    if ($this) {\r\n        const th = $this as State<S>\r\n        let [instance, controls] = th.attach(PluginID);\r\n        if (instance instanceof Error) {\r\n            // auto attach instead of throwing\r\n            Logger(th)\r\n            instance = th.attach(PluginID)[0];\r\n        }\r\n        const inst = instance as LoggerPluginInstance;\r\n        return {\r\n            log: () => inst.log(th.path, controls)\r\n        }\r\n    }\r\n    return {\r\n        id: PluginID,\r\n        init: () => {\r\n            // tslint:disable-next-line: no-console\r\n            console.log(`[hookstate]: logger attached`);\r\n            return new LoggerPluginInstance();\r\n        }\r\n    }\r\n}\r\n"],"names":[],"mappings":";;;;AAeA,IAAA,oBAAA,kBAAA,YAAA;AAAA,IAAA,SAAA,oBAAA,GAAA;KA4BC;IA3BG,oBAAa,CAAA,SAAA,CAAA,aAAA,GAAb,UAAc,CAAmB,EAAA;QAC7B,IAAM,KAAK,GAAG,GAAG,CAAC;QAClB,IAAM,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;AAC5B,QAAA,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,GAAG,GAAG,EAAE;AACrB,YAAA,OAAO,UAAG,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,EAAA,OAAA,CAAA,CAAA,MAAA,CAAQ,CAAC,CAAC,MAAM,GAAG,KAAK,2BAAwB,CAAA;AAC9E,SAAA;AACD,QAAA,OAAO,CAAC,CAAC;KACZ,CAAA;IAED,oBAAK,CAAA,SAAA,CAAA,KAAA,GAAL,UAAM,CAA+B,EAAA;;AAEjC,QAAA,OAAO,CAAC,GAAG,CACP,uCAAA,CAAA,MAAA,CAAwC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAK,KAAA,CAAA;AAC7D,YAAA,EAAA,CAAA,MAAA,CAAG,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,KAAK,CAAC,CAAE,EAChC,CAAC,CAAC,CAAC;KACV,CAAA;AAED,IAAA,oBAAA,CAAA,SAAA,CAAA,GAAG,GAAH,UAAI,IAAU,EAAE,CAA6D,EAAA;;QAEzE,OAAO,OAAO,CAAC,GAAG,CACd,uCAAA,CAAA,MAAA,CAAwC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAI,IAAA,CAAA;YAC1D,EAAG,CAAA,MAAA,CAAA,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,YAAY,EAAE,CAAC,EAAA,GAAA,CAAG,EAC1C;AACI,YAAA,IAAI,EAAE,IAAI;AACV,YAAA,KAAK,EAAE,CAAC,CAAC,YAAY,EAAE;AAC1B,SAAA,CAAC,CAAC;KACV,CAAA;IACL,OAAC,oBAAA,CAAA;AAAD,CAAC,EAAA,CAAA,CAAA;AAED,IAAM,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;AAK5B,SAAU,MAAM,CAAI,KAAgB,EAAA;AACtC,IAAA,IAAI,KAAK,EAAE;QACP,IAAM,IAAE,GAAG,KAAiB,CAAA;AACxB,QAAA,IAAA,EAAuB,GAAA,IAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAzC,QAAQ,GAAA,EAAA,CAAA,CAAA,CAAA,EAAE,UAAQ,QAAuB,CAAC;QAC/C,IAAI,QAAQ,YAAY,KAAK,EAAE;;YAE3B,MAAM,CAAC,IAAE,CAAC,CAAA;YACV,QAAQ,GAAG,IAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,SAAA;QACD,IAAM,MAAI,GAAG,QAAgC,CAAC;QAC9C,OAAO;AACH,YAAA,GAAG,EAAE,YAAA,EAAM,OAAA,MAAI,CAAC,GAAG,CAAC,IAAE,CAAC,IAAI,EAAE,UAAQ,CAAC,GAAA;SACzC,CAAA;AACJ,KAAA;IACD,OAAO;AACH,QAAA,EAAE,EAAE,QAAQ;AACZ,QAAA,IAAI,EAAE,YAAA;;AAEF,YAAA,OAAO,CAAC,GAAG,CAAC,8BAA8B,CAAC,CAAC;YAC5C,OAAO,IAAI,oBAAoB,EAAE,CAAC;SACrC;KACJ,CAAA;AACL;;;;"}