{"version":3,"file":"index.es.js","sources":["../src/Mutate.ts"],"sourcesContent":["\nimport { StateValueAtPath, StateLink } from '@hookstate/core';\n\n// TODO add support for Map and Set\nexport type InferredStateMutation<S> =\n    S extends ReadonlyArray<(infer U)> ? ArrayStateMutation<U> :\n    S extends null ? ValueStateMutation<S> :\n    S extends object ? ObjectStateMutation<S> :\n    S extends string ? StringStateMutation<S> :\n    S extends number ? NumberStateMutation<S> :\n    ValueStateMutation<S>;\n\nexport type SetPartialStateAction<S extends object> = Partial<S> | ((prevValue: S) => Partial<S>);\n\nexport interface ValueStateMutation<S> {\n    set: React.Dispatch<React.SetStateAction<S>>;\n}\n\nexport interface StringStateMutation<S> extends ValueStateMutation<S> {\n    // reserved for the future\n}\n\nexport interface NumberStateMutation<S> extends ValueStateMutation<S> {\n    // reserved for the future\n}\n\nexport interface ArrayStateMutation<U> extends ValueStateMutation<U[]> {\n    merge(other: React.SetStateAction<{ [index: number]: U; }>): void;\n    update(key: number, value: React.SetStateAction<U>): void;\n    concat(other: React.SetStateAction<U[]>): void;\n    push(elem: U): void;\n    pop(): void;\n    insert(index: number, elem: U): void;\n    remove(index: number): void;\n    swap(index1: number, index2: number): void;\n}\n\nexport interface ObjectStateMutation<S extends object> extends ValueStateMutation<S> {\n    merge: React.Dispatch<SetPartialStateAction<S>>;\n    update<K extends keyof S>(key: K, value: React.SetStateAction<S[K]>): void;\n}\n\nfunction extractValue<S, R>(prevValue: S, value: R | ((prevValue: S) => R)): R {\n    if (typeof value === 'function') {\n        return (value as ((prevValue: S) => R))(prevValue);\n    }\n    return value;\n}\n\nfunction createArrayStateMutation<U>(state: StateLink<U[]>): ArrayStateMutation<U> {\n    // All actions (except set) should crash if prevValue is null or undefined.\n    // It is intentional behavior.\n    return {\n        set: (newValue) => state.set(newValue),\n        merge: (other) => {\n            state.set((prevValue) => {\n                const source = extractValue(prevValue, other);\n                Object.keys(source).sort().forEach(i => {\n                    const index = Number(i);\n                    prevValue[index] = source[index];\n                });\n                return prevValue;\n            });\n        },\n        update: (key, value) => state.nested[key].set(value),\n        concat: (other) => {\n            if (other) {\n                state.set((prevValue) => {\n                    return prevValue.concat(extractValue(prevValue, other));\n                });\n            }\n        },\n        push: (elem) => {\n            state.set((prevValue) => {\n                prevValue.push(elem);\n                return prevValue;\n            });\n        },\n        pop: () => {\n            state.set((prevValue) => {\n                prevValue.pop();\n                return prevValue;\n            });\n        },\n        insert: (index, elem) => {\n            state.set((prevValue) => {\n                prevValue.splice(index, 0, elem);\n                return prevValue;\n            });\n        },\n        remove: (index) => {\n            state.set((prevValue) => {\n                prevValue.splice(index, 1);\n                return prevValue;\n            });\n        },\n        swap: (index1, index2) => {\n            const p1 = state.nested[index1].get();\n            const p2 = state.nested[index2].get();\n            state.nested[index1].set(p2);\n            state.nested[index2].set(p1);\n        }\n    };\n}\n\nfunction createObjectStateMutation<S extends object>(state: StateLink<S>): ObjectStateMutation<S> {\n    // All actions (except set) should crash if prevValue is null or undefined.\n    // It is intentional behavior.\n    return {\n        set: (v) => state.set(v),\n        merge: (value: SetPartialStateAction<S>) => {\n            state.set((prevValue) => {\n                const extractedValue = extractValue(prevValue, value);\n                Object.keys(extractedValue).forEach(key => {\n                    prevValue[key] = extractValue[key]\n                })\n                return prevValue\n            });\n        },\n        update: (key, value) => state.nested[key as string].set(value)\n    };\n}\n\nfunction createStringStateMutation<S>(state: StateLink<S>): StringStateMutation<S> {\n    // reserved for future extensions\n    return {\n        set: v => state.set(v)\n    };\n}\n\nfunction createNumberStateMutation<S>(state: StateLink<S>): NumberStateMutation<S> {\n    // reserved for future extensions\n    return {\n        set: v => state.set(v)\n    };\n}\n\nfunction createValueStateMutation<S>(state: StateLink<S>): ValueStateMutation<S> {\n    return {\n        set: v => state.set(v)\n    };\n}\n\n// tslint:disable-next-line: function-name\nexport function Mutate<S>(state: StateLink<S>): InferredStateMutation<S> {\n    if (Array.isArray(state.value)) {\n        return createArrayStateMutation(state as unknown as StateLink<StateValueAtPath>) as\n            unknown as InferredStateMutation<S>\n    } else if (typeof state.value === 'object' && state.value !== null) {\n        return createObjectStateMutation(state as StateLink<StateValueAtPath>) as\n            unknown as InferredStateMutation<S>;\n    } else if (typeof state.value === 'string') {\n        return createStringStateMutation(state) as unknown as InferredStateMutation<S>;\n    } else if (typeof state.value === 'number') {\n        return createNumberStateMutation(state) as unknown as InferredStateMutation<S>;\n    } else {\n        return createValueStateMutation(state) as unknown as InferredStateMutation<S>;\n    }\n}\n"],"names":[],"mappings":"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"}