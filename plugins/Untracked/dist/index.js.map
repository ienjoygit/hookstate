{"version":3,"file":"index.js","sources":["../src/Untracked.ts"],"sourcesContent":["\nimport { Plugin, SetPartialStateAction, State, self } from '@hookstate/core';\n\nexport interface UntrackedExtensions<S> {\n    get(): S;\n    set(newValue: React.SetStateAction<S>): void;\n    merge(mergeValue: SetPartialStateAction<S>): void;\n}\n\nconst PluginID = Symbol('Untracked');\nexport function Untracked(): Plugin;\nexport function Untracked<S>($this: State<S>): UntrackedExtensions<S>;\nexport function Untracked<S>($this?: State<S>): Plugin | UntrackedExtensions<S> {\n    if ($this) {\n        const th = $this as State<S>;\n        const [_, controls] = th[self].attach(PluginID);\n        return {\n            get: () => controls.getUntracked(),\n            set: (v) => controls.setUntracked(v),\n            merge: (v) => controls.mergeUntracked(v)\n        }            \n    }\n    return {\n        id: PluginID,\n        init: () => ({})\n    }\n}\n"],"names":["self"],"mappings":";;;;;;AASA,IAAM,QAAQ,GAAG,MAAM,CAAC,WAAW,CAAC,CAAC;SAGrB,SAAS,CAAI,KAAgB;IACzC,IAAI,KAAK,EAAE;QACP,IAAM,EAAE,GAAG,KAAiB,CAAC;QACvB,IAAA,KAAgB,EAAE,CAACA,SAAI,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAxC,EAAC,QAAA,EAAE,UAAQ,QAA6B,CAAC;QAChD,OAAO;YACH,GAAG,EAAE,cAAM,OAAA,UAAQ,CAAC,YAAY,EAAE,GAAA;YAClC,GAAG,EAAE,UAAC,CAAC,IAAK,OAAA,UAAQ,CAAC,YAAY,CAAC,CAAC,CAAC,GAAA;YACpC,KAAK,EAAE,UAAC,CAAC,IAAK,OAAA,UAAQ,CAAC,cAAc,CAAC,CAAC,CAAC,GAAA;SAC3C,CAAA;KACJ;IACD,OAAO;QACH,EAAE,EAAE,QAAQ;QACZ,IAAI,EAAE,cAAM,QAAC,EAAE,IAAC;KACnB,CAAA;AACL;;;;"}